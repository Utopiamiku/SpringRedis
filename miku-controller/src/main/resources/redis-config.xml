<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath:resource.xml"></import>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${redis.maxTotal}" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="${redis.testWhileIdle}" />
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
        <!-- 最大连接数 -->
<!--        <property name="maxTotal" value="30" />-->
<!--        &lt;!&ndash; 最大空闲连接数 &ndash;&gt;-->
<!--        <property name="maxIdle" value="10" />-->
<!--        &lt;!&ndash; 每次释放连接的最大数目 &ndash;&gt;-->
<!--        <property name="numTestsPerEvictionRun" value="1024" />-->
<!--        &lt;!&ndash; 释放连接的扫描间隔（毫秒） &ndash;&gt;-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="30000" />-->
<!--        &lt;!&ndash; 连接最小空闲时间 &ndash;&gt;-->
<!--        <property name="minEvictableIdleTimeMillis" value="1800000" />-->
<!--        &lt;!&ndash; 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 &ndash;&gt;-->
<!--        <property name="softMinEvictableIdleTimeMillis" value="10000" />-->
<!--        &lt;!&ndash; 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 &ndash;&gt;-->
<!--        <property name="maxWaitMillis" value="1500" />-->
<!--        &lt;!&ndash; 在获取连接的时候检查有效性, 默认false &ndash;&gt;-->
<!--        <property name="testOnBorrow" value="true" />-->
<!--        &lt;!&ndash; 在空闲时检查有效性, 默认false &ndash;&gt;-->
<!--        <property name="testWhileIdle" value="true" />-->
<!--        &lt;!&ndash; 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true &ndash;&gt;-->
<!--        <property name="blockWhenExhausted" value="false" />-->
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
        <constructor-arg name="host" value="${redis.host}"></constructor-arg>
        <constructor-arg name="port" value="${redis.port}"></constructor-arg>
        <constructor-arg name="timeout" value="${redis.timeout}"></constructor-arg>
        <constructor-arg name="password" value="${redis.passeord}"></constructor-arg>
<!--        <constructor-arg name="host" value="127.0.0.1"></constructor-arg>-->
<!--        <constructor-arg name="port" value="6379"></constructor-arg>-->
<!--        <constructor-arg name="timeout" value="3000"></constructor-arg>-->
<!--        <constructor-arg name="password" value="123456"></constructor-arg>-->
    </bean>

<!--    <bean id="jedis" class="redis.clients.jedis.Jedis">-->
<!--        -->
<!--    </bean>-->





</beans>